# This script was generated by SVP 4 Manager.
# Check https://www.svp-team.com for more details.

SetMemoryMax(6000)

global threads=25

LoadPlugin("F:\Programme Files\SVP 4\plugins\svpflow1.dll")
LoadPlugin("F:\Programme Files\SVP 4\plugins\svpflow2.dll")

SetFilterMTMode("DEFAULT_MT_MODE",2)
SetFilterMTMode("SVSmoothFps_NVOF",1)
SetFilterMTMode("ffdshow_source",3)
ffdshow_source()

ConvertToYV12()

global source_width = width
global source_height = height
global crop_string  = ""
global resize_string = "BicubicResize(2560,1064,b=0,c=0.75)"
global smoothfps_params = "{gpuid:11,gpu_qn:2,rate:{num:2,den:1},algo:2,mask:{area:50},scene:{},hdr:{mluminance:1100,adaptive:true,contrast:2}}"

global demo_mode=0
global stereo_type=0
global nvof=1
global nvof_blk=16

########## BEGIN OF base.avs ##########
# This file is a part of SmoothVideo Project (SVP) ver.4
# This is NOT the full AVS script, all used variables are defined via
# JScript code that generates the full script text.

function interpolate(clip src)
{
	input = crop_string=="" ? src : eval("src."+crop_string)
	input = resize_string=="" ? input : eval("input."+resize_string)

	nvof==0 ? eval("""
		super=SVSuper(input, super_params)
		vectors=SVAnalyse(super, analyse_params, src=input)
		smooth=SVSmoothFps(input, super, vectors, smoothfps_params, mt=threads, src=src)
	""") : eval("""
	    nvof_src = input.BicubicResize(input.width/nvof_blk*4,input.height/nvof_blk*4,src_width=-(input.width % nvof_blk),src_height=-(input.height % nvof_blk))
		smooth=SVSmoothFps_NVOF(input, smoothfps_params, nvof_src=nvof_src, mt=threads, src=src)
	""")

	return demo_mode==0 ? smooth : demo(input,smooth)
}

input=last

	stereo_type==0 ? eval(""" interpolate(input)
""") : 	stereo_type==1 ? eval("""
		lf = interpolate(input.crop(0,0,input.width/2,0))
		rf = interpolate(input.crop(input.width/2,0,0,0))
		StackHorizontal(lf, rf)
""") : 	stereo_type==2 ? Eval("""
		lf = interpolate(input.crop(0,0,0,input.height/2))
		rf = interpolate(input.crop(0,input.height/2,0,0))
		StackVertical(lf, rf)""") : input

########### END OF base.avs ###########


Prefetch(threads)